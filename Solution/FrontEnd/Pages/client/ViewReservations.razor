@page "/view_active_reservations"
@using Controllers
@using Microsoft.Data.SqlClient
@inherits Navigation
@inject ClientController ClientController
@inject NavigationManager NavigationManager

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

<header class="text-center mt-2">
    <h1>Reservas Activas</h1>
</header>

<section class="mt-4">
    <div class="mt-3 d-flex justify-content-center">
        @if (ClientListIsEmpty())
        {
            <p> @NoRegisteredReservationsMessage </p>
        }
        else
        {
            <div class="col-md-6">
                @foreach (var reservation in _currentClientReservations)
                {
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Dep√≥sito: @reservation.DepositName</h5>
                            <p class="card-text">
                                <strong>Fecha de Inicio:</strong> @reservation.StartDate.ToString("dd/MM/yyyy")
                            </p>
                            <p class="card-text">
                                <strong>Fecha de Fin:</strong> @reservation.EndDate.ToString("dd/MM/yyyy")
                            </p>
                            @if (!reservation.IsConfirmed && !reservation.IsRejected)
                            {
                                <p class="card-text"><strong>Estado:</strong> Pendiente</p>
                            }

                            @if (!reservation.IsConfirmed && reservation.IsRejected)
                            {
                                <p class="card-text"><strong>Estado:</strong> Rechazada </p>
                                <p class="card-text">
                                    <strong>Motivo de rechazo:</strong> @reservation.RejectedMessage
                                </p>
                            }

                            @if (reservation.IsConfirmed && !reservation.IsRejected)
                            {
                                <p class="card-text"><strong>Estado:</strong> Confirmada </p>
                            }

                            @if (@reservation.PaymentStatus == _pendingStatus)
                            {
                                <p class="card-text"><strong>Estado de pago: </strong> Reservado </p>
                            }

                            @if (@reservation.PaymentStatus == _paidStatus)
                            {
                                <p class="card-text"><strong>Estado de pago: </strong> Capturado </p>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>

@code {
    List<ViewReservationDto>? _currentClientReservations;
    ClientDto? _currentClient;
    bool _showNoRegisteredReservationsMessage;
    const string NoRegisteredReservationsMessage = "No existen reservas registradas";
    private int _pendingStatus = 1;
    private int _paidStatus = 2;

    protected override void OnInitialized()
    {
        LoadClient();
        LoadReservations();
    }

    private void LoadClient()
    {
        try
        {
            _currentClient = ClientController.GetActiveUserByClientDto();
        }
        catch (SqlException)
        {
            NavigationManager.NavigateTo($"/{Routes.Error.ToString().ToLower()}");
        }
    }

    private void LoadReservations()
    {
        if (_currentClient != null)
        {
            try
            {
                _currentClientReservations = ClientController.GetClientViewReservationDtOs(_currentClient);
                HideNoRegisteredReservationsMessage();
            }
            catch (ArgumentException)
            {
                ShowNoRegisteredReservationsMessage();
            }
            catch (SqlException)
            {
                NavigationManager.NavigateTo($"/{Routes.Error.ToString().ToLower()}");
            }
        }
    }

    private void ShowNoRegisteredReservationsMessage()
    {
        _showNoRegisteredReservationsMessage = true;
    }

    private void HideNoRegisteredReservationsMessage()
    {
        _showNoRegisteredReservationsMessage = false;
    }

    bool ClientListIsEmpty()
    {
        if (_currentClient == null) return true;
        if (_currentClientReservations == null) return true;
        return _currentClientReservations.Count == 0;
    }


}